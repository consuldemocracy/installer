---
- name: Configure Bundler path
  shell: "{{ rvm_command }} && bundle config --local path {{ shared_dir }}/bundle"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Configure Bundler environments
  shell: "{{ rvm_command }} && bundle config --local without development:test"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Check if files needed to compile the racc gem exist
  stat:
    path: "/usr/bin/mkdir"
  register: usr_bin_mkdir

- name: Make sure racc finds the files it needs to compile
  become: true
  become_user: root
  file:
    state: "link"
    src: "/bin/mkdir"
    dest: "/usr/bin/mkdir"
  when: not usr_bin_mkdir.stat.exists

- name: Install gems (this may take a few minutes)
  shell: "{{ rvm_command }} && bundle install"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Copy secrets configuration to shared folder
  copy:
    src: "{{ release_dir }}/config/secrets.yml.example"
    dest: "{{ shared_dir }}/config/secrets.yml"
    remote_src: yes
    force: no

- name: Copy database configuration to shared folder
  template:
    src: "{{ playbook_dir }}/roles/rails/templates/database.yml"
    dest: "{{ shared_dir }}/config/database.yml"
    force: no

- name: Add symbolic links for secrets and database configuration
  file:
    state: "link"
    src: "{{ shared_dir }}/config/{{ item }}"
    dest: "{{ release_dir }}/config/{{ item }}"
  with_items:
    - "secrets.yml"
    - "database.yml"

- name: Update host configuration in secrets.yml
  replace:
    path: "{{ release_dir }}/config/secrets.yml"
    regexp: '^{{ env }}:\n  # secret_key_base: ""\n  server_name: ""'
    replace: '{{ env }}:\n  # secret_key_base: ""\n  server_name: "{{ server_hostname }}"'

- name: Generate secret key
  shell: "{{ rvm_command }} && RAILS_ENV={{ env }} EXECJS_RUNTIME=Disabled bin/rails secret"
  register: secret_key_base
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Update secret_key_base configuration in secrets.yml
  replace:
    path: "{{ shared_dir }}/config/secrets.yml"
    regexp: '^{{ env }}:\n  # secret_key_base: ""'
    replace: '{{ env }}:\n  secret_key_base: "{{ secret_key_base.stdout }}"'

- name: Update application timezone configuration in secrets.yml
  replace:
    path: "{{ shared_dir }}/config/secrets.yml"
    regexp: '^  # time_zone: ""'
    replace: '  time_zone: "{{ application_timezone }}"'

- name: Do not force https connection
  replace:
    path: "{{ shared_dir }}/config/secrets.yml"
    regexp: "  force_ssl: true"
    replace: "  force_ssl: false"
  when: domain is not defined

- name: Create Database
  shell: "{{ rvm_command }} && bin/rake db:migrate RAILS_ENV={{ env }} EXECJS_RUNTIME=Disabled"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Load configuration seeds
  shell: "{{ rvm_command }} && bin/rake db:seed RAILS_ENV={{ env }} EXECJS_RUNTIME=Disabled"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Precompile assets
  shell: "{{ fnm_command }} && {{ rvm_command }} && fnm exec bin/rake assets:precompile RAILS_ENV={{ env }}"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash

- name: Update crontab with whenever
  shell: "{{ rvm_command }} && EXECJS_RUNTIME=Disabled bundle exec whenever --update-crontab {{ app_name }} --set environment={{ env }}"
  args:
    chdir: "{{ release_dir }}"
    executable: /bin/bash
